version: '3.8'

services:
  fastapi_prod:
    build:
      context: ./app_api
      dockerfile: ./Dockerfile.prod
    container_name: fastapi_app_prod
    networks:
      - app_network
    ports:
      - "${PORT}:80"
    depends_on:
      - db_prod
      - redis_prod
    env_file:
      - env/.env.production
    environment:
      - SEAWEEDFS_MASTER_URL=http://seaweedfs_master:9333
      - SEAWEEDFS_VOLUME_URL=http://seaweedfs_volume:8080
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db_prod/${POSTGRES_DB}
      - ENV=${ENV}
      - PORT=${PORT}
      - REDIS_URL=redis://default:${REDIS_PASSWORD}@redis_prod:${REDIS_PORT}/0
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1.25'
          memory: '512M'
        reservations:
          cpus: '0.75'
          memory: '512M'

  bot_prod:
    build:
      context: ./telegram_app
      dockerfile: ./Dockerfile
    container_name: telegram_bot_prod
    networks:
      - app_network
    depends_on:
      - db_prod
      - redis_prod
    env_file:
      - env/.env.production
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - API_URL=http://fastapi_prod:80
      - SEAWEEDFS_VOLUME_URL=http://seaweedfs_volume:8080
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '512M'
        reservations:
          cpus: '0.25'
          memory: '256M'

  db_prod:
    image: postgres:16
    container_name: postgres_db_prod
    networks:
      - app_network
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '512M'
        reservations:
          cpus: '0.5'
          memory: '256M'

  redis_prod:
    image: redis:7.2.4
    container_name: redis_prod
    networks:
      - app_network
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "6381:6379"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '256M'
        reservations:
          cpus: '0.1'
          memory: '128M'

volumes:
  postgres_data_prod:

networks:
  app_network:
    external: true
